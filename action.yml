name: R Package Validation Report
author: Roche
description: |
  A Github Action that generates a validation report for an R package.

inputs:
  report_pkg_dir:
    description: Path to package's root.
    required: false
    default: "."
  report_template_path:
    description: |
      File path of the R markdown template to use for the report.
      The default template is available [here.](./template.qmd)
    required: false
    default: "./template.qmd"
  no_cache:
    description: "Disable github action R dependency caching"
    required: false
    default: "false"
  cache_version:
    description: "Version of the cache. To clean cache bump this version."
    required: false
    default: "v1"
  disable_install_dev_deps:
    description: |
      Disable installation of dev dependencies while
      building the report.
    required: false
    default: "false"
branding: # https://feathericons.com/
  icon: "award"
  color: "blue"

runs:
  using: "composite"
  steps:
    - name: Get R version
      id: r_version
      run: echo "R_VERSION=$(R --version | head -1 | awk '{print $3}')" >> $GITHUB_OUTPUT
      shell: bash

    - name: Set R Library home on Linux
      run: |
        mkdir -p ${RUNNER_TEMP}/Library
        echo ".libPaths(c('${RUNNER_TEMP}/Library', .libPaths()))" > ~/.Rprofile
        cat ~/.Rprofile
      shell: bash

    - name: Cache R packages
      if: "contains(inputs.no_cache, 'false')"
      uses: actions/cache@v4
      with:
        path: /home/runner/work/_temp/Library
        key: ${{ inputs.cache_version }}-${{ runner.os }}-${{ steps.r_version.outputs.R_VERSION }}-${{ hashFiles('DESCRIPTION') }}
        restore-keys: ${{ inputs.cache_version }}-${{ runner.os }}-${{ steps.r_version.outputs.R_VERSION }}

    - name: Install dependencies
      run: |
        ${GITHUB_ACTION_PATH}/dependencies.R
        [ ! -f "./template.qmd" ] && cp ${GITHUB_ACTION_PATH}/template.qmd . || echo "./template.qmd already exists"
        if [[ "$(echo -e "$(quarto --version)\n1.5.29" | sort -V | head -1)" == "1.5.29" ]]; then
          echo "✅ Quarto CLI version sufficient (>= 1.5.29)"
          echo "Quarto CLI version: $(quarto --version)"
        else
          echo "❌ Quarto CLI version insufficient (< 1.5.29)"
          echo "Downloading Quarto CLI..."

          # Install newer version of Quarto CLI.
          # This gets the latest version number (v1.5 or higher) of Quarto from GitHub releases.
          # It assumes that such version number (v1.5 or higher) exists within the last 100 released Quarto versions.
          export QUARTO_VERSION="$(curl -L -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/quarto-dev/quarto-cli/releases?per_page=100 \
            2>/dev/null | \
            jq -r '.[] | select(.tag_name | test("^v1.[5-9]")) | .tag_name' | \
            head -1 | \
            cut -c2-)"
          echo "Downloading Quarto version = $QUARTO_VERSION"
          apt-get update
          apt-get install -qy wget
          wget https://github.com/quarto-dev/quarto-cli/releases/download/v${QUARTO_VERSION}/quarto-${QUARTO_VERSION}-linux-amd64.deb
          dpkg -i quarto-${QUARTO_VERSION}-linux-amd64.deb
          echo "New Quarto CLI version: $(quarto --version)"
        fi
      shell: bash

    - name: Run report generator
      id: report-generator
      run: |
        ${GITHUB_ACTION_PATH}/report-generator.R
      shell: bash
      env:
        # Composite action doesn't set inputs as env vars.
        # We need to do this manually...
        INPUT_REPORT_PKG_DIR: ${{ inputs.report_pkg_dir }}
        INPUT_REPORT_TEMPLATE_PATH: ${{ inputs.report_template_path }}
        DISABLE_INSTALL_DEV_DEPS: ${{ inputs.disable_install_dev_deps }}
